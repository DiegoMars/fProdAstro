---
import { getCollection } from 'astro:content';
import HText from '../hText.astro';
const FResearch = await getCollection('farisaResearch');

//shown research cards. Should work on ordering these by date in the future
// const shownResearch = Object.values(FResearch).slice(0,3);
// const shownResearch = FResearch;
const feature = 
[
  "10.3847/1538-4357/ad5672",
  "10.3847/0004-637X/831/1/97",
  "10.1088/0004-637X/757/1/7",
  "10.1088/2041-8205/730/2/L29",
  "10.1088/0004-637X/699/2/1067",
  "10.3847/1538-4365/abea20"
];

const shownResearch = FResearch
  .filter((article) => feature.includes(article.data.doi))  // Add to list if doi is in featured
  .map((article) => ({
    ...article,
    dateObj: new Date(article.data.publicated),
    url: "/farisaR#" + article.data.doi.replaceAll(/[^a-zA-Z0-9_-]/g, "-"),
  }))                                                         // Add url and date object
  .sort((a, b) => b.dateObj.getTime() - a.dateObj.getTime()); // Newest first
---
<section class="fFeatRes">
  <HText text="Featured Research"></HText>
  <div class="carousel">
    {shownResearch.map(FResearch => (
      <a class="card" href={FResearch.url}>
        <div class="img">
          <img
            src={FResearch.data.picture.url}
            alt={FResearch.data.picture.alt}
          />
        </div>
        <div class="description">
          <div class="title">
            <h5>{FResearch.data.title}</h5>
          </div>
          <div class="abstract">
            <p><b>Published:</b> {FResearch.data.publicated}</p>
            <p>
              {FResearch.body}
            </p>
          </div>
        </div>
      </a>
    ))}
    <a class="more" href="/farisaR">
      <img src="imgs/icons/arrowB.svg" alt="more arrow" loading="lazy">
      <h5>See more</h5>
    </a>
  </div>
</section>

<style>
.fFeatRes {
  background-color: var(--accent);
  padding: 1.5rem;
  color: var(--text);
  text-align: center;
}

.carousel  {
  padding-top: 1.5rem;
  padding-bottom: 1rem; /* Adds breathing room above scrollbar */
  display: flex;
  justify-content: space-evenly;
  overflow: auto;
  gap:2rem;
}

.carousel::-webkit-scrollbar {
  background-color: var(--accent);
  padding: 1rem 0;
  height: 1rem;
}

.carousel::-webkit-scrollbar-thumb {
  background-color: var(--primary);
  border-radius: 1rem;
}

.card {
  text-decoration: none;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  justify-content: space-evenly;
  /* width: 400px; */
  width: 280px;
  padding: 1rem;
  background-color: var(--secondary);
  border-radius: 10px;
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
  transition: 0.3s;
}

.card:hover {
  background-color: var(--secondary-600);
}

.img > img {
  width: 100%;
  height: auto;
  max-width: 250px;
  border-radius: 10px;
}

.description {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  /* width: 400px; */
  width: 280px;
  margin: 0 auto;
}

.title {
  color: var(--primary);
}

.title > h5 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.abstract {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.abstract > p{
  color: var(--text);
  margin: 0;
  display: -webkit-box;
  -webkit-line-clamp: 8; /* Change to 2, 3, etc. for line count */
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.more {
  margin:auto 0;
  text-decoration: none;
  color: var(--text);
  width: 101px;
  padding: 1rem;
  background-color: var(--background);
  border-radius: 1rem;
  transition: 0.3s;
}

.more:hover {
  background-color: var(--accent-800);
  color: var(--primary);
}

.more > img {
  width: 70px;
  padding-bottom: 0.5rem;
}

@media screen and (min-width: 576px){
  .card {
    width: 400px;
  }
  .description {
    width: 400px;
  }
}
/* @media screen and (min-width: 780px){ */
/**/
/* } */
@media screen and (min-width: 1200px){
  .img > img {
    width: 100%;
    height: auto;
    max-height: 210px;
    border-radius: 10px;
  }
}
</style>
